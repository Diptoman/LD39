<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_viewX = 0;
viewY = 0;
_viewX2 = 0;
_viewY2 = 0;

_shake = 0;
_viewDist = 4;

_currentPower = 200;
_currentScrap = 0;
_maxPower = 400;

window_set_cursor(cr_none);
cursor_sprite = spr_cursor;
//instance_create(mouse_x, mouse_y, obj_cursor);

randomize();

precision = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wave

_wave = 1;
_waveGap = 20;
_minWaveGap = 10;

alarm[0] = _waveGap * 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create wave

//Choose start point
type = floor(random(2));
if (type == 0)
{
    xx = choose(-32, room_width + 32);
    yy = floor(random(room_height));
}
else
{
    yy = choose(-32, room_height + 32);
    xx = floor(random(room_width));
}

num = 4 + min(floor(_wave / 2), 8);
for(i = 0; i &lt; num; i++)
{
    inst = choose(obj_enemy1, obj_enemy2);
    instance_create(xx - 16 + floor(random(32)), yy - 16 + floor(random(32)), inst);
}

_wave += 1;

if (_waveGap &gt; _minWaveGap)
    _waveGap -= .5;
    
    
alarm[0] = _waveGap * 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (obj_main.state=="alive")
{
    _viewX = ((obj_main.x - view_wview/2) * (_viewDist - 1) + (mouse_x - view_wview/2)) / _viewDist;
    _viewY = ((obj_main.y - view_hview/2) * (_viewDist - 1) + (mouse_y - view_hview/2)) / _viewDist;

    _viewX2 = _viewX2 - (_viewX2 - _viewX) * 0.4;
    _viewY2 = _viewY2 - (_viewY2 - _viewY) * 0.4;

    view_xview = _viewX2 + random(_shake) - _shake / 2;
    view_yview = _viewY2 + random(_shake) - _shake / 2;

    if view_xview&gt; (room_width - view_wview)
        view_xview = (room_width - view_wview);
    
    if view_xview &lt; 0
        view_xview=0;
    
    if view_yview &lt; 0
        view_yview=0;
    
    if view_yview &gt; (room_height - view_hview)
        view_yview = (room_height - view_hview);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xx = view_xview;
yy = view_yview;
draw_sprite(spr_bar_back, 0, xx + 4 + 22, yy + 4 + 4);
amt = _currentPower/_maxPower;
draw_sprite_part(spr_bar_front, 0, 0, 0, amt * 111, 42, xx + 4 + 22, yy + 4 + 4);

draw_sprite(spr_playerPower, 0, xx + 4, yy + 4);


draw_sprite(spr_bar_back, 0, xx + 4 + 22, yy + 4 + 4 + 18);
amt = obj_core._power/obj_core._maxPower;
draw_sprite_part(spr_coreBar_front, 0, 0, 0, amt * 111, 42, xx + 4 + 22, yy + 4 + 4 + 18);

draw_sprite(spr_core_UI, 0, xx + 4, yy + 4 + 14);

draw_sprite(spr_scrap_UI, 0, xx + view_hview + 20, yy + 4);
draw_set_font(fnt_main);
draw_set_valign(fa_top);
draw_set_halign(fa_left);
draw_set_color(c_white);
draw_text_outline(xx + view_hview + 48, yy + 4, " x " + string(_currentScrap), 1, c_black, 8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
